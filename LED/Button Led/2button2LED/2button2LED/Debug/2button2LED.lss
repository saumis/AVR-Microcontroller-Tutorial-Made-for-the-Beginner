
2button2LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000072  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000072  000000e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000e6  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000116  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000121  00000000  00000000  00000136  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000d1  00000000  00000000  00000257  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000139  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000464  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000165  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000018  00000000  00000000  000005ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000605  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	1c c0       	rjmp	.+56     	; 0x6e <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRB=0XFF;		//PORT B intialised as o/p
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	87 bb       	out	0x17, r24	; 23
	DDRD=0XFC;		//pin D1 & D0 initialised as i/p
  3c:	8c ef       	ldi	r24, 0xFC	; 252
  3e:	81 bb       	out	0x11, r24	; 17
	
    while(1)
    {
		int a= PIND & 0X03;
  40:	20 b3       	in	r18, 0x10	; 16
  42:	23 70       	andi	r18, 0x03	; 3
  44:	82 2f       	mov	r24, r18
  46:	90 e0       	ldi	r25, 0x00	; 0
	     if(a==0X01)
  48:	81 30       	cpi	r24, 0x01	; 1
  4a:	91 05       	cpc	r25, r1
  4c:	11 f4       	brne	.+4      	; 0x52 <__SREG__+0x13>
			{
				PORTB=a;
  4e:	28 bb       	out	0x18, r18	; 24
  50:	03 c0       	rjmp	.+6      	; 0x58 <__SREG__+0x19>
			}
		else if(a==0X02)
  52:	02 97       	sbiw	r24, 0x02	; 2
  54:	09 f4       	brne	.+2      	; 0x58 <__SREG__+0x19>
			{
				PORTB=a;
  56:	28 bb       	out	0x18, r18	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  58:	2f e3       	ldi	r18, 0x3F	; 63
  5a:	8d e0       	ldi	r24, 0x0D	; 13
  5c:	93 e0       	ldi	r25, 0x03	; 3
  5e:	21 50       	subi	r18, 0x01	; 1
  60:	80 40       	sbci	r24, 0x00	; 0
  62:	90 40       	sbci	r25, 0x00	; 0
  64:	e1 f7       	brne	.-8      	; 0x5e <__SREG__+0x1f>
  66:	00 c0       	rjmp	.+0      	; 0x68 <__SREG__+0x29>
  68:	00 00       	nop
			}
		_delay_ms(1000);
		PORTB=0x00;
  6a:	18 ba       	out	0x18, r1	; 24
	}
  6c:	e9 cf       	rjmp	.-46     	; 0x40 <__SREG__+0x1>

0000006e <_exit>:
  6e:	f8 94       	cli

00000070 <__stop_program>:
  70:	ff cf       	rjmp	.-2      	; 0x70 <__stop_program>
