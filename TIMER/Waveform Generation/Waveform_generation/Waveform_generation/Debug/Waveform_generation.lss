
Waveform_generation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000056  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000056  000000ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ca  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  000000fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000092  00000000  00000000  0000011a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000053  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000bd  00000000  00000000  000001ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000002bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000151  00000000  00000000  000002e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000431  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	0e c0       	rjmp	.+28     	; 0x52 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:

#include <avr/io.h>

int main(void)
{
	TCCR1A|=(1<<COM1A0);					// sets COM1A on toggling mode i.e. 
  38:	8f b5       	in	r24, 0x2f	; 47
  3a:	80 64       	ori	r24, 0x40	; 64
  3c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B|=(1<<WGM12)|(1<<CS12);			//setting WGM12-0 100 gives
  3e:	8e b5       	in	r24, 0x2e	; 46
  40:	8c 60       	ori	r24, 0x0C	; 12
  42:	8e bd       	out	0x2e, r24	; 46
	OCR1A=31250;
  44:	82 e1       	ldi	r24, 0x12	; 18
  46:	9a e7       	ldi	r25, 0x7A	; 122
  48:	9b bd       	out	0x2b, r25	; 43
  4a:	8a bd       	out	0x2a, r24	; 42
	DDRB|=0X02;
  4c:	b9 9a       	sbi	0x17, 1	; 23
	PORTB|=0X02;
  4e:	c1 9a       	sbi	0x18, 1	; 24
  50:	ff cf       	rjmp	.-2      	; 0x50 <__SREG__+0x11>

00000052 <_exit>:
  52:	f8 94       	cli

00000054 <__stop_program>:
  54:	ff cf       	rjmp	.-2      	; 0x54 <__stop_program>
